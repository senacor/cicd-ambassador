---
# Source: ambassador/templates/admin-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ambassador-admin
  namespace: "${NAMESPACE_NAME}"
  labels:
    # Hard-coded label for Prometheus Operator ServiceMonitor
    service: ambassador-admin
    product: aes
  annotations:
    a8r.io/owner: Ambassador Labs
    a8r.io/repository: github.com/datawire/ambassador
    a8r.io/description: The Ambassador Edge Stack admin service for internal use and
      health checks.
    a8r.io/documentation: https://www.getambassador.io/docs/edge-stack/latest/
    a8r.io/chat: http://a8r.io/Slack
    a8r.io/bugs: https://github.com/datawire/ambassador/issues
    a8r.io/support: https://www.getambassador.io/about-us/support/
    a8r.io/dependencies: None
spec:
  type: NodePort
  ports:
  - port: 8877
    targetPort: admin
    protocol: TCP
    name: ambassador-admin
  - port: 8005
    targetPort: 8005
    protocol: TCP
    name: ambassador-snapshot
  selector:
    service: ambassador
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: "${NAMESPACE_NAME}"
  labels:
    # Hard-coded label for Prometheus Operator ServiceMonitor
    service: ambassador
    product: aes
  annotations:
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "${KUBERNETES_LOADBALANCER_CERT_ARN}"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "ambassador-https"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: ambassador
  - port: 443
    targetPort: http
    protocol: TCP
    name: ambassador-https
  selector:
    service: ambassador